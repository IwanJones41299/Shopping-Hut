{"version":3,"sources":["Services/AuthService.js","Context/AuthContext.js","hocs/PrivateRoute.js","hocs/UnprivateRoute.js","Components/MobileCore/Header.jsx","Components/BrowserCore/Header.jsx","Components/MobileCore/Footer.jsx","Components/BrowserCore/Footer.jsx","Components/Screens/HomeScreen.jsx","Components/Screens/LoginScreen.jsx","Components/Screens/RegisterScreen.jsx","Components/Screens/ContactScreen.jsx","Components/MobileCore/BottomNav.jsx","Components/BrowserCore/BottomNav.jsx","Components/Screens/UserContractScreen.jsx","Components/Screens/MenuScreen.jsx","Components/Screens/ListScreens/FruitVegItem.jsx","Services/ListService.js","Components/Message.jsx","Components/Screens/ListScreens/FruitVeg.jsx","Components/Screens/ListScreens/FreshFoodItem.jsx","Components/Screens/ListScreens/FreshFood.jsx","Components/Screens/ListScreens/FrozenFoodItem.jsx","Components/Screens/ListScreens/FrozenFood.jsx","Components/Screens/ListScreens/BakeryItem.jsx","Components/Screens/ListScreens/Bakery.jsx","Components/Screens/ListScreens/DriedGoodsItem.jsx","Components/Screens/ListScreens/DriedGoods.jsx","Components/Screens/ListScreens/DrinksConfectionaryItem.jsx","Components/Screens/ListScreens/DrinksConfectionary.jsx","Components/Screens/ListScreens/CleaningItem.jsx","Components/Screens/ListScreens/Cleaning.jsx","Components/Screens/ListScreens/PetItem.jsx","Components/Screens/ListScreens/Pets.jsx","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["login","user","a","fetch","method","body","JSON","stringify","headers","res","status","json","then","data","isAuthenticated","username","register","logout","AuthContext","createContext","children","useState","setUser","setIsAuthenticated","isLoaded","setIsLoaded","useEffect","AuthService","catch","err","console","log","Provider","value","Navbar","className","Brand","href","Alert","variant","style","textAlign","color","minHeight","fontSize","PrivateRoute","Component","component","rest","accountRoles","useContext","render","props","to","pathname","state","from","location","Header","onClickLogoutHandler","sucess","Toggle","aria-controls","Collapse","id","Nav","onClick","aria-label","expand","Footer","HomeScreen","isMobile","Helmet","charSet","Button","CardDeck","Card","margin","alt","Body","Title","Text","LoginScreen","error","setError","authContext","onChange","e","preventDefault","target","name","onSubmit","history","push","Container","fluid","Form","Group","InputGroup","Prepend","Control","type","placeholder","Row","Col","Register","email","accountRole","password","confirmedPasword","setConfirmedPassword","success","setSuccess","timerID","useRef","clearTimeout","message","msgError","setTimeout","selected","minLength","ContactScreen","subject","inputs","setInputs","prev","sendForm","axios","post","text","resetForm","required","as","rows","MobileBottomNav","BrowserBottomNav","MenuScreen","ListGroup","Item","action","maxWidth","FruitVegItem","deleteItem","get","fruitveg","_id","window","reload","quantity","response","msgBody","fruitVegItem","freshFoodItem","frozenFoodItem","bakeryItem","driedFoodItem","drinksConfectionaryItem","toiletriesCleaningItem","petsItem","getStyle","baseClass","Message","role","FruitVegScreen","Number","setfruitveg","fruitvegItems","setfruitvegItems","setMessage","authcontext","ListService","getData","Table","responsive","map","FreshFoodScreen","freshfood","FreshFoodScreem","setfreshfood","freshfoodItems","setfreshfoodItems","FrozenFoodItem","frozenfood","FrozenFoodScreen","setfrozenfood","frozenfoodItems","setfrozenfoodItems","BakeryItem","bakery","BakeryScreen","setbakery","bakeryItems","setbakeryItems","DriedGoodsItem","driedfood","DriedGoodsScreen","setdriedfood","driedfoodItems","setdriedfoodItems","DrinksConfectionaryItem","drinksconfectionary","DrinksConfectionaryScreen","setdrinksconfectionary","drinksconfectionaryItems","setdrinksconfectionaryItems","CleaningItem","toiletriescleaning","CleaningScreen","settoiletriescleaning","toiletriescleaningItems","settoiletriescleaningItems","PetsItem","pet","PetsScreen","setpet","petItems","setpetItems","App","UnprivateRoute","exact","path","Home","Login","Contact","UserContact","Menu","FruitVeg","FreshFood","FrozenFood","Bakery","DriedGoods","DrinksConfectionary","Cleaning","Pets","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById","URL","process","origin","addEventListener","contentType","indexOf","ready","unregister","checkValidServiceWorker","serviceWorkerReistration"],"mappings":"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","file":"static/js/main.942af839.chunk.js","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n  login: async (user) => {\r\n    const res = await fetch(\"/user/login\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      }\r\n    });\r\n    if (res.status !== 401)\r\n      return res.json().then((data) => data);\r\n\r\n    else\r\n      return { isAuthenticated: false, user: { username: \"\" } };\r\n  },\r\n  register: async (user) => {\r\n    const res = await fetch(\"/user/register\", {\r\n      method: \"post\",\r\n      body: JSON.stringify(user),\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    });\r\n    const data = await res.json();\r\n    return data;\r\n  },\r\n  logout: async () => {\r\n    const res = await fetch(\"/user/logout\");\r\n    const data = await res.json();\r\n    return data;\r\n  },\r\n  isAuthenticated: async () => {\r\n    const res = await fetch(\"/user/authenticated\");\r\n    if (res.status !== 401)\r\n      return res.json().then((data) => data);\r\n    else\r\n      return { isAuthenticated: false, user: { username: \"\" } };\r\n  },\r\n};","/* eslint-disable import/no-anonymous-default-export */\r\nimport React, { createContext, useState, useEffect } from \"react\";\r\nimport AuthService from \"../Services/AuthService\";\r\nimport { Navbar, Alert, Button } from \"react-bootstrap\";\r\nimport { BiListPlus } from \"react-icons/bi\";\r\nimport { RiPrinterCloudLine } from \"react-icons/ri\";\r\n// import { GoCloudDownload } from \"react-icons/go\";\r\n\r\nexport const AuthContext = createContext();\r\n\r\nexport default ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n\r\n  useEffect(() => {\r\n    AuthService.isAuthenticated()\r\n      .then((data) => {\r\n        setUser(data.user);\r\n        setIsAuthenticated(data.isAuthenticated);\r\n        setIsLoaded(true);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      {!isLoaded ? (\r\n        <>\r\n          <Navbar className=\"navbar\">\r\n            <Navbar.Brand href=\"#home\">\r\n              <h5 className=\"nav_Title\">Shopping Hut</h5>\r\n            </Navbar.Brand>\r\n          </Navbar>\r\n          <Alert variant=\"warning\">\r\n            <h5 style={{ textAlign: \"center\", color: \"#856404\" }}>\r\n              App is offline. Please connect to a network!\r\n            </h5>\r\n          </Alert>\r\n          <main style={{minHeight: \"85vh\"}}>\r\n          <section className=\"home_top\">\r\n          <div className=\"container-fluid content\">\r\n            <h3 className=\"welcome_title\">Shopping Hut</h3>\r\n            <p className=\"welcome_subtitle\">\r\n              Create your shopping list\r\n              <br />\r\n              At the click of a button\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"home_middle\">\r\n          <div className=\"container-fluid\">\r\n            <h3 className=\"pwa_title\">Discover our PWA</h3>\r\n            <p className=\"card-body\">\r\n              Install our app by adding it to your homescreen\r\n            </p>\r\n          </div>\r\n        </section>\r\n\r\n          <section className=\"home_bottom\">\r\n          <div className=\"container-fluid\">\r\n            <h3 className=\"bottom_title\">\r\n              Discover the amazing feature this app has to offer\r\n            </h3>\r\n            <div className=\"features_card\">\r\n              <BiListPlus style={{ fontSize: \"3.5em\" }} />\r\n              <h5 className=\"feature_title\">Create your shopping list</h5>\r\n              <p>Creating your weekly shopping list at ease.</p>\r\n            </div>\r\n            <div className=\"features_card\">\r\n              <RiPrinterCloudLine style={{ fontSize: \"3.5em\" }} />\r\n              <h5 className=\"feature_title\">Print your list</h5>\r\n              <p>\r\n                Print your list out in a pdf to have at quick access on your\r\n                phone\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n          </main>\r\n          <footer>\r\n            <div className=\"container-fluid\">\r\n              <div className=\"footer-copyright text-center py-3\">\r\n                © 2020 Copyright :\r\n                <a\r\n                  href=\"https://github.com/IwanJones41299\"\r\n                  className=\"copyright-text\"\r\n                >\r\n                  Iwan Jones\r\n                </a>\r\n              </div>\r\n            </div>\r\n          </footer>\r\n        </>\r\n      ) : (\r\n        <AuthContext.Provider\r\n          value={{ user, setUser, isAuthenticated, setIsAuthenticated }}\r\n        >\r\n          {children}\r\n        </AuthContext.Provider>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst PrivateRoute = ({component : Component, accountRoles, ...rest}) => {\r\n    const { isAuthenticated, user } = useContext(AuthContext);\r\n    return( \r\n        <Route {...rest} render={props => {\r\n            if(!isAuthenticated)\r\n                return <Redirect to={{pathname: '/login', state : {from : props.location}}} />\r\n            \r\n            // if(!accountRoles.includes(user.accountRole))\r\n            //     // return <Redirect to={{pathname: '/login', state : {from : props.location}}} />\r\n\r\n            return <Component {...props}/>\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { AuthContext } from '../Context/AuthContext';\r\n\r\nconst PrivateRoute = ({component : Component, ...rest}) => {\r\n    const { isAuthenticated } = useContext(AuthContext);\r\n    return( \r\n        <Route {...rest} render={props => {\r\n            if(isAuthenticated)\r\n                return <Redirect to={{pathname: '/menu', state : {from : props.location}}} />\r\n\r\n            return <Component {...props}/>\r\n        }}/>\r\n    )\r\n}\r\n\r\nexport default PrivateRoute;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { RiAccountCircleLine } from \"react-icons/ri\";\r\nimport { BsPersonPlus } from \"react-icons/bs\";\r\nimport \"./Mobile.scss\";\r\n\r\nconst Header = (props) => {\r\n  \r\n    const { isAuthenticated, setIsAuthenticated, setUser } = useContext(\r\n    AuthContext\r\n  );\r\n\r\n  const onClickLogoutHandler = () => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.sucess) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const unauthenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/login\">\r\n          <Nav className=\"nav-item nav-link login-mobile\"><RiAccountCircleLine aria-label=\"Login\" /></Nav>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Nav className=\"nav-item nav-link reg-mobile\"><BsPersonPlus aria-label=\"Register\"/></Nav>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const authenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n        <Nav className=\"nav-item nav-link\" onClick={onClickLogoutHandler}>Logout</Nav>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"navbar\">\r\n      <Link to=\"/\">\r\n      <Navbar.Brand href=\"#home\">\r\n        <h1 className=\"nav_Title\" style={{fontSize: \"1em\"}}>Shopping Hut</h1>\r\n      </Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          {!isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;","import React, { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport \"./Browser.scss\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\n\r\nconst Header = (props) => {\r\n  const { isAuthenticated, setIsAuthenticated, setUser } = useContext(\r\n    AuthContext\r\n  );\r\n\r\n  const onClickLogoutHandler = () => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.sucess) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const unauthenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/login\">\r\n          <Nav className=\"nav-item nav-link login\">Login</Nav>\r\n        </Link>\r\n        <Link to=\"/register\">\r\n          <Nav className=\"nav-item nav-link reg\">Register</Nav>\r\n        </Link>\r\n        <Link to=\"/contact\">\r\n          <Nav className=\"nav-item nav-link reg\">Contact</Nav>\r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  const authenticatedNavbar = () => {\r\n    return (\r\n      <>\r\n        <Link to=\"/\">\r\n          <Nav className=\"nav-item nav-link reg\" onClick={onClickLogoutHandler}>Logout</Nav>                    \r\n        </Link>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"navbar\" expand=\"md\">\r\n      <Link to=\"/\">\r\n      <Navbar.Brand href=\"#home\">\r\n        <h1 className=\"nav_Title\" style={{fontSize : \"1.2em\"}}>Shopping Hut</h1>\r\n      </Navbar.Brand>\r\n      </Link>\r\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n      <Navbar.Collapse id=\"basic-navbar-nav\">\r\n        <Nav className=\"ml-auto\">\r\n          {!isAuthenticated ? unauthenticatedNavbar() : authenticatedNavbar()}\r\n        </Nav>\r\n      </Navbar.Collapse>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport \"./Mobile.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          © 2020 Copyright :\r\n          <a\r\n            href=\"https://github.com/IwanJones41299\"\r\n            className=\"copyright-text\"\r\n          >\r\n            Iwan Jones\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport \"./Browser.scss\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"footer-copyright text-center py-3\">\r\n          © 2020 Copyright :\r\n          <a\r\n            href=\"https://github.com/IwanJones41299\"\r\n            className=\"copyright-text\"\r\n          >\r\n            Iwan Jones\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { Card, CardDeck } from \"react-bootstrap\";\r\nimport { BiListPlus } from \"react-icons/bi\";\r\nimport { RiPrinterCloudLine } from \"react-icons/ri\";\r\nimport { GoCloudDownload } from \"react-icons/go\";\r\nimport MobFooter from \"../MobileCore/Footer\";\r\nimport BsrFooter from \"../BrowserCore/Footer\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./screens.scss\";\r\n\r\nconst HomeScreen = () => {\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Home</title>\r\n        </Helmet>\r\n        <section className=\"home_top\">\r\n          <div className=\"container-fluid content\">\r\n            <h2 className=\"welcome_title\">Shopping Hut</h2>\r\n            <p className=\"welcome_subtitle\">\r\n              Create your shopping list\r\n              <br />\r\n              At the click of a button\r\n            </p>\r\n            <Link to=\"/login\">\r\n              <Button variant=\"outline-primary\" className=\"btn btn-login\">\r\n                Login\r\n              </Button>\r\n            </Link>\r\n            <Link to=\"/register\">\r\n              <Button variant=\"outline-primary\" className=\"btn btn-reg\">\r\n                Register\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"home_middle\">\r\n          <div className=\"container-fluid\">\r\n            <h3 className=\"pwa_title\">Discover our PWA</h3>\r\n            <p className=\"card-body\">\r\n              Install our app by adding it to your homescreen\r\n            </p>\r\n            <Link to=\"/contact\">\r\n              <Button variant=\"outline-primary\" className=\"btn btn-login\">\r\n                Contact\r\n              </Button>\r\n            </Link>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"home_bottom\">\r\n          <div className=\"container-fluid\">\r\n            <h3 className=\"bottom_title\">\r\n              Discover the amazing feature this app has to offer\r\n            </h3>\r\n            <div className=\"features_card\">\r\n              <BiListPlus style={{ fontSize: \"3.5em\" }} />\r\n              <h4 className=\"feature_title\">Create your shopping list</h4>\r\n              <p>Creating your weekly shopping list at ease.</p>\r\n            </div>\r\n            <div className=\"features_card\">\r\n              <RiPrinterCloudLine style={{ fontSize: \"3.5em\" }} />\r\n              <h5 className=\"feature_title\">Print your list</h5>\r\n              <p>\r\n                Print your list out in a pdf to have at quick access on your\r\n                phone\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <MobFooter />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Home</title>\r\n        </Helmet>\r\n        <section>\r\n          <div className=\"position-relative overflow-hidden text-center bg-custom\">\r\n            <div className=\"col-md-5 p-lg-5 mx-auto my-5\">\r\n              <h1 className=\"display-4 font-weight-normal\">Shopping Hut</h1>\r\n              <p className=\"lead font-weight-normal\">\r\n                Create your shopping list\r\n                <br />\r\n                At the click of a button\r\n              </p>\r\n              <Link to=\"/login\">\r\n                <Button variant=\"outline-primary\" className=\"btn btn-login\">\r\n                  Login\r\n                </Button>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Button variant=\"outline-primary\" className=\"btn btn-reg\">\r\n                  Register\r\n                </Button>\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </section>\r\n\r\n        <section className=\"browser_middle\">\r\n          <CardDeck className=\"mt-5 ml-3 mr-3\">\r\n            <Card>\r\n              <GoCloudDownload\r\n                className=\"mt-4 mb-4\"\r\n                style={{ fontSize: \"4.5em\", margin: \"auto\", color: \"#EFC9AF\" }}\r\n                alt=\"Download Icon\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Title\r\n                  className=\"mb-4\"\r\n                  style={{ color: \"#EFC9AF\", fontSize: \"2em\" }}\r\n                >\r\n                  Discover our PWA\r\n                </Card.Title>\r\n                <Card.Text style={{ color: \"#EFC9AF\", fontSize: \"1.2em\" }}>\r\n                  Install our app by adding it to <br /> your homescreen\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <BiListPlus\r\n                className=\"mt-4 mb-4\"\r\n                style={{ fontSize: \"4.5em\", margin: \"auto\", color: \"#EFC9AF\" }}\r\n                alt=\"List Icon\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Title\r\n                  className=\"mb-4\"\r\n                  style={{ color: \"#EFC9AF\", fontSize: \"2em\" }}\r\n                >\r\n                  Create your shoppin list\r\n                </Card.Title>\r\n                <Card.Text style={{ color: \"#EFC9AF\", fontSize: \"1.2em\" }}>\r\n                  Creating your weekly shopping list <br /> at ease.\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n            <Card>\r\n              <RiPrinterCloudLine\r\n                className=\"mt-4 mb-4\"\r\n                style={{ fontSize: \"3.5em\", margin: \"auto\", color: \"#EFC9AF\" }}\r\n                alt=\"Printer Icon\"\r\n              />\r\n              <Card.Body>\r\n                <Card.Title\r\n                  className=\"mb-4\"\r\n                  style={{ color: \"#EFC9AF\", fontSize: \"2em\" }}\r\n                >\r\n                  Print your list\r\n                </Card.Title>\r\n                <Card.Text style={{ color: \"#EFC9AF\", fontSize: \"1.2em\" }}>\r\n                  Print your list out in a pdf to have at <br /> quick access on\r\n                  your phone\r\n                </Card.Text>\r\n              </Card.Body>\r\n            </Card>\r\n          </CardDeck>\r\n        </section>\r\n\r\n        <BsrFooter />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  InputGroup,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Alert,\r\n} from \"react-bootstrap\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport MobFooter from \"../MobileCore/Footer\";\r\nimport BsrFooter from \"../BrowserCore/Footer\";\r\n\r\nconst LoginScreen = (props) => {\r\n  const [user, setUser] = useState({ username: \"\" });\r\n  const [error, setError] = useState(\"\");\r\n  const authContext = useContext(AuthContext);\r\n\r\n  const onChange = (e) => {\r\n    e.preventDefault();\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    AuthService.login(user).then((data) => {\r\n      const { isAuthenticated, user } = data;\r\n      if (isAuthenticated) {\r\n        authContext.setUser(user);\r\n        authContext.setIsAuthenticated(isAuthenticated);\r\n        props.history.push(\"/menu\");\r\n      } else {\r\n        setError(\"Login details are incorrect\");\r\n      }\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Login</title>\r\n        </Helmet>\r\n        <main>\r\n          <Container fluid className=\"loginForm\">\r\n            <Card.Body>\r\n              <h3 className=\"signin\">Log In</h3>\r\n            </Card.Body>\r\n            <Form onSubmit={onSubmit}>\r\n              {error !== \"\" ? <Alert variant=\"danger\">{error}</Alert> : \"\"}\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <BsFillPersonFill />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    onChange={onChange}\r\n                    placeholder=\"username...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiLockPasswordLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    onChange={onChange}\r\n                    placeholder=\"password...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                Login\r\n              </Button>\r\n              <Link to=\"/reset\">\r\n                <Card.Text className=\"reg-link\">Reset Password...</Card.Text>\r\n              </Link>\r\n              <Link to=\"/register\">\r\n                <Card.Text className=\"reg-link\">Create an account...</Card.Text>\r\n              </Link>\r\n            </Form>\r\n          </Container>\r\n        </main>\r\n        <MobFooter />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Login</title>\r\n        </Helmet>\r\n        <main className=\"browserMain\">\r\n          <Container fluid className=\"browser_loginForm\">\r\n            <Row>\r\n              <Col className=\"3\" />\r\n              <Col className=\"col-3 browser_title\">\r\n                <h2 className=\"b_loginTitle\">Login Form</h2>\r\n                <Card.Text\r\n                  className=\"b_loginText\"\r\n                  style={{ fontSize: \"1.3em\" }}\r\n                >\r\n                  Welcome Back! <br />\r\n                  Sign in and carry on creating your <br /> shopping list\r\n                </Card.Text>\r\n                <Link to=\"/register\">\r\n                  <Card.Text className=\"reg-link\">\r\n                    Create an account...\r\n                  </Card.Text>\r\n                </Link>\r\n              </Col>\r\n              <Col className=\"col-3 browser_login\">\r\n                <Form onSubmit={onSubmit}>\r\n                  {error !== \"\" ? <Alert variant=\"danger\">{error}</Alert> : \"\"}\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <BsFillPersonFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        onChange={onChange}\r\n                        placeholder=\"username...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiLockPasswordLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        onChange={onChange}\r\n                        placeholder=\"password...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button\r\n                    variant=\"primary\"\r\n                    type=\"submit\"\r\n                    className=\"login-btnBrowser btn-block\"\r\n                  >\r\n                    Login\r\n                  </Button>\r\n                  <Link to=\"/reset\">\r\n                    <Card.Text className=\"reg-link mt-4\">\r\n                      Reset Password...\r\n                    </Card.Text>\r\n                  </Link>\r\n                </Form>\r\n              </Col>\r\n              <Col className=\"Col-3\" />\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n        <BsrFooter />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useRef, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  InputGroup,\r\n  Card,\r\n  Row,\r\n  Col,\r\n  Alert\r\n} from \"react-bootstrap\";\r\nimport { RiAccountCircleLine } from \"react-icons/ri\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport { RiLockPasswordLine } from \"react-icons/ri\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { MdSupervisorAccount } from \"react-icons/md\";\r\nimport MobFooter from \"../MobileCore/Footer\";\r\nimport BsrFooter from \"../BrowserCore/Footer\";\r\n\r\nconst Register = (props) => {\r\n  const [user, setUser] = useState({\r\n    name: \"\",\r\n    username: \"\",\r\n    email: \"\",\r\n    accountRole: \"\",\r\n    password: \"\",\r\n  });\r\n  const [confirmedPasword, setConfirmedPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const [success, setSuccess] = useState(\"\");\r\n  let timerID = useRef(null);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      clearTimeout(timerID);\r\n    };\r\n  }, []);\r\n\r\n  const onChange = (e) => {\r\n    setUser({ ...user, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setUser({\r\n      name: \"\",\r\n      username: \"\",\r\n      email: \"\",\r\n      accountRole: \"\",\r\n      password: \"\",\r\n    });\r\n    setConfirmedPassword(\"\");\r\n  };\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (user.password !== confirmedPasword) {\r\n      setError(\"Passwords do not match!\")\r\n    } else {\r\n      AuthService.register(user).then((data) => {\r\n        const { message } = data;\r\n        setSuccess(\"Registration sucessful\")\r\n        resetForm();\r\n        if (!message.msgError) {\r\n          timerID = setTimeout(() => {\r\n            props.history.push(\"/login\");\r\n          }, 1000);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Registration</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"74vh\" }}>\r\n          <Container fluid className=\"signupForm\">\r\n            <Card.Body>\r\n              <h3 className=\"signin\">Sign Up</h3>\r\n            </Card.Body>\r\n            <Form onSubmit={onSubmit}>\r\n            {error !== \"\" ? <Alert variant=\"danger\">{error}</Alert> : \"\"}\r\n            {success !== \"\" ? <Alert variant=\"success\">{success}</Alert> : \"\"}\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiAccountCircleLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    value={user.name}\r\n                    onChange={onChange}\r\n                    placeholder=\"full name...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <BsFillPersonFill />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"username\"\r\n                    type=\"text\"\r\n                    value={user.username}\r\n                    onChange={onChange}\r\n                    placeholder=\"username...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <HiOutlineMail />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={user.email}\r\n                    onChange={onChange}\r\n                    placeholder=\"email...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <MdSupervisorAccount />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <select\r\n                    className=\"custom-select\"\r\n                    id=\"accountRole\"\r\n                    name=\"accountRole\"\r\n                    value={user.accountRole}\r\n                    onChange={onChange}\r\n                  >\r\n                    <option selected>Choose an account type</option>\r\n                    <option value=\"Personal\" id=\"Personal\">\r\n                      Personal\r\n                    </option>\r\n                    <option value=\"Family\" id=\"Family\">\r\n                      Family\r\n                    </option>\r\n                  </select>\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiLockPasswordLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"password\"\r\n                    type=\"password\"\r\n                    value={user.password}\r\n                    onChange={onChange}\r\n                    placeholder=\"password...\"\r\n                    minLength={8}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiLockPasswordLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"confirmPassword\"\r\n                    type=\"password\"\r\n                    value={confirmedPasword}\r\n                    onChange={(e) => setConfirmedPassword(e.target.value)}\r\n                    placeholder=\"confirm password...\"\r\n                    minLength={8}\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                Create Account\r\n              </Button>\r\n              <Link to=\"/login\">\r\n                <Card.Text className=\"reg-link\">\r\n                  Already have an account?\r\n                </Card.Text>\r\n              </Link>\r\n            </Form>\r\n          </Container>\r\n        </main>\r\n        <MobFooter />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Registration</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"83vh\" }}>\r\n          <Container fluid className=\"browser_signupForm\">\r\n            <Row>\r\n              <Col className=\"3\" />\r\n              <Col className=\"col-3 browser_SignUptitle\">\r\n                <h2 className=\"b_loginTitle\">Sign Up</h2>\r\n                <Card.Text\r\n                  className=\"b_loginText\"\r\n                  style={{ fontSize: \"1.3em\" }}\r\n                >\r\n                  Welcome! <br />\r\n                  Let's get you started by creating <br /> an account\r\n                </Card.Text>\r\n                <Link to=\"/login\">\r\n                  <Card.Text className=\"reg-link\">\r\n                    Already have an account?\r\n                  </Card.Text>\r\n                </Link>\r\n              </Col>\r\n              <Col className=\"col-3 browser_login\">\r\n                <Form onSubmit={onSubmit}>\r\n                {error !== \"\" ? <Alert variant=\"danger\">{error}</Alert> : \"\"}\r\n                {success !== \"\" ? <Alert variant=\"sucess\">{success}</Alert> : \"\"}\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiAccountCircleLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={user.name}\r\n                        onChange={onChange}\r\n                        placeholder=\"full name...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <BsFillPersonFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"username\"\r\n                        type=\"text\"\r\n                        value={user.username}\r\n                        onChange={onChange}\r\n                        placeholder=\"username...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <HiOutlineMail />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={user.email}\r\n                        onChange={onChange}\r\n                        placeholder=\"email...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <MdSupervisorAccount />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <select\r\n                        className=\"custom-select\"\r\n                        id=\"accountRole\"\r\n                        name=\"accountRole\"\r\n                        value={user.accountRole}\r\n                        onChange={onChange}\r\n                      >\r\n                        <option selected>Choose an account type</option>\r\n                        <option value=\"Personal\" id=\"Personal\">\r\n                          Personal\r\n                        </option>\r\n                        <option value=\"Family\" id=\"Family\">\r\n                          Family\r\n                        </option>\r\n                      </select>\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiLockPasswordLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"password\"\r\n                        type=\"password\"\r\n                        value={user.password}\r\n                        onChange={onChange}\r\n                        placeholder=\"password...\"\r\n                        minLength={8}\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiLockPasswordLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"confirmPassword\"\r\n                        type=\"password\"\r\n                        value={confirmedPasword}\r\n                        onChange={(e) => setConfirmedPassword(e.target.value)}\r\n                        placeholder=\"confirm password...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                    Create Account\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n              <Col className=\"Col-3\" />\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n        <BsrFooter />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default Register;","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  InputGroup,\r\n  Card,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport { RiAccountCircleLine } from \"react-icons/ri\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { MdSubject } from \"react-icons/md\";\r\nimport MobFooter from \"../MobileCore/Footer\";\r\nimport BsrFooter from \"../BrowserCore/Footer\";\r\n\r\nconst ContactScreen = () => {\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const sendForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, subject, message } = inputs;\r\n\r\n    axios.post(\"/contact\", {\r\n      name,\r\n      email,\r\n      subject,\r\n      text: message,\r\n    });\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setInputs({\r\n      name: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Contact</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"75vh\" }}>\r\n          <Container fluid className=\"signupForm\">\r\n            <Card.Body>\r\n              <h3 className=\"signin\">Write to us</h3>\r\n            </Card.Body>\r\n            <Form onSubmit={sendForm}>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiAccountCircleLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    value={inputs.name}\r\n                    onChange={onChange}\r\n                    placeholder=\"full name...\"\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <BsFillPersonFill />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={inputs.email}\r\n                    onChange={onChange}\r\n                    placeholder=\"email...\"\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <MdSubject />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"subject\"\r\n                    type=\"text\"\r\n                    value={inputs.subject}\r\n                    onChange={onChange}\r\n                    placeholder=\"subject...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <HiOutlineMail />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name=\"message\"\r\n                    type=\"text\"\r\n                    value={inputs.message}\r\n                    onChange={onChange}\r\n                    placeholder=\"type your message...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                Send Message\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </main>\r\n        <MobFooter />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Contact</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"76vh\" }}>\r\n          <Container fluid className=\"browser_signupForm\">\r\n            <Row>\r\n              <Col className=\"3\" />\r\n              <Col className=\"col-3 browser_contact\">\r\n                <h2 className=\"b_loginTitle\">Write to us</h2>\r\n                <Card.Text\r\n                  className=\"b_loginText\"\r\n                  style={{ fontSize: \"1.3em\" }}\r\n                >\r\n                  Plese feel free to get in touch <br /> with any questions or\r\n                  requests\r\n                </Card.Text>\r\n              </Col>\r\n              <Col className=\"col-3 browser_login\">\r\n                <Form onSubmit={sendForm}>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiAccountCircleLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={inputs.name}\r\n                        onChange={onChange}\r\n                        placeholder=\"full name...\"\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <BsFillPersonFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={inputs.email}\r\n                        onChange={onChange}\r\n                        placeholder=\"email...\"\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <MdSubject />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"subject\"\r\n                        type=\"text\"\r\n                        value={inputs.subject}\r\n                        onChange={onChange}\r\n                        placeholder=\"subject...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <HiOutlineMail />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"message\"\r\n                        type=\"text\"\r\n                        value={inputs.message}\r\n                        onChange={onChange}\r\n                        placeholder=\"type your message...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                    Send Message\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n              <Col className=\"Col-3\" />\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n        <BsrFooter />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ContactScreen;\r\n","import React, { useContext } from \"react\";\r\nimport AuthService from \"../../Services/AuthService\";\r\nimport { AuthContext } from \"../../Context/AuthContext\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdContacts } from 'react-icons/md'\r\nimport { AiOutlineMenu } from 'react-icons/ai'\r\nimport { GiExitDoor } from 'react-icons/gi'\r\nimport \"./Mobile.scss\";\r\n\r\nconst MobileBottomNav = () => {\r\n\r\n  const { setIsAuthenticated, setUser } = useContext(\r\n    AuthContext\r\n  );\r\n\r\n  const onClickLogoutHandler = () => {\r\n    AuthService.logout().then((data) => {\r\n      if (data.sucess) {\r\n        setUser(data.user);\r\n        setIsAuthenticated(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Navbar className=\"navbar mobile_bottomNav\">\r\n      <Nav className=\"m-auto\">\r\n        <Link to=\"/user_contact\">\r\n          <Nav className=\"nav-item nav-link pr-6 mr-5\"><MdContacts style={{fontSize: \"2em\"}} /></Nav>\r\n        </Link>\r\n        <Link to=\"/menu\">\r\n          <Nav className=\"nav-item nav-link pr-6 mr-5\"><AiOutlineMenu style={{fontSize: \"2em\"}} /></Nav>\r\n        </Link>\r\n        <Link to=\"/\">\r\n          <Nav className=\"nav-item nav-link\" onClick={onClickLogoutHandler}><GiExitDoor style={{fontSize: \"2em\"}} /></Nav>\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default MobileBottomNav;","import React from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MdContacts } from 'react-icons/md'\r\nimport { AiOutlineMenu } from 'react-icons/ai'\r\nimport \"./Browser.scss\";\r\n\r\nconst BrowserBottomNav = () => {\r\n  return (\r\n    <Navbar className=\"navbar bottom-nav\">\r\n      <Nav className=\"m-auto\">\r\n        <Link to=\"/user_contact\">\r\n          <Nav className=\"nav-item nav-link pr-6 mr-5 userNav\">\r\n            <MdContacts style={{ fontSize: \"1.5em\" }} />\r\n          </Nav>\r\n        </Link>\r\n        <Link to=\"/menu\">\r\n          <Nav className=\"nav-item nav-link pr-6 mr-5 userNav\">\r\n            <AiOutlineMenu style={{ fontSize: \"1.5em\" }} />\r\n          </Nav>\r\n        </Link>\r\n      </Nav>\r\n    </Navbar>\r\n  );\r\n};\r\nexport default BrowserBottomNav;\r\n","import React, { useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport MobileBottomNav from \"../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../BrowserCore/BottomNav\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport {\r\n  Form,\r\n  Button,\r\n  Container,\r\n  InputGroup,\r\n  Card,\r\n  Row,\r\n  Col,\r\n} from \"react-bootstrap\";\r\nimport { RiAccountCircleLine } from \"react-icons/ri\";\r\nimport { BsFillPersonFill } from \"react-icons/bs\";\r\nimport { HiOutlineMail } from \"react-icons/hi\";\r\nimport { MdSubject } from \"react-icons/md\";\r\n\r\nconst ContactScreen = () => {\r\n  const [inputs, setInputs] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    subject: \"\",\r\n    message: \"\",\r\n  });\r\n\r\n  const onChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setInputs((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  const sendForm = (e) => {\r\n    e.preventDefault();\r\n\r\n    const { name, email, subject, message } = inputs;\r\n\r\n    axios.post(\"/contact\", {\r\n      name,\r\n      email,\r\n      subject,\r\n      text: message,\r\n    });\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setInputs({\r\n      name: \"\",\r\n      email: \"\",\r\n      subject: \"\",\r\n      message: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Contact</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"75vh\" }}>\r\n          <Container fluid className=\"signupForm\">\r\n            <Card.Body>\r\n              <h3 className=\"signin\">Write to us</h3>\r\n            </Card.Body>\r\n            <Form onSubmit={sendForm}>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <RiAccountCircleLine />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"name\"\r\n                    type=\"text\"\r\n                    value={inputs.name}\r\n                    onChange={onChange}\r\n                    placeholder=\"full name...\"\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <BsFillPersonFill />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"email\"\r\n                    type=\"email\"\r\n                    value={inputs.email}\r\n                    onChange={onChange}\r\n                    placeholder=\"email...\"\r\n                    required\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <MdSubject />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    name=\"subject\"\r\n                    type=\"text\"\r\n                    value={inputs.subject}\r\n                    onChange={onChange}\r\n                    placeholder=\"subject...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Form.Group>\r\n                <InputGroup>\r\n                  <InputGroup.Prepend>\r\n                    <InputGroup.Text>\r\n                      <HiOutlineMail />\r\n                    </InputGroup.Text>\r\n                  </InputGroup.Prepend>\r\n                  <Form.Control\r\n                    as=\"textarea\"\r\n                    rows={3}\r\n                    name=\"message\"\r\n                    type=\"text\"\r\n                    value={inputs.message}\r\n                    onChange={onChange}\r\n                    placeholder=\"type your message...\"\r\n                  />\r\n                </InputGroup>\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                Send Message\r\n              </Button>\r\n            </Form>\r\n          </Container>\r\n        </main>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Contact</title>\r\n        </Helmet>\r\n        <main style={{ minHeight: \"76vh\" }}>\r\n          <Container fluid className=\"browser_signupForm\">\r\n            <Row>\r\n              <Col className=\"3\" />\r\n              <Col className=\"col-3 browser_contact\">\r\n                <h2 className=\"b_loginTitle\">Write to us</h2>\r\n                <Card.Text\r\n                  className=\"b_loginText\"\r\n                  style={{ fontSize: \"1.3em\" }}\r\n                >\r\n                  Plese feel free to get in touch <br /> with any questions or\r\n                  requests\r\n                </Card.Text>\r\n              </Col>\r\n              <Col className=\"col-3 browser_login\">\r\n                <Form onSubmit={sendForm}>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <RiAccountCircleLine />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"name\"\r\n                        type=\"text\"\r\n                        value={inputs.name}\r\n                        onChange={onChange}\r\n                        placeholder=\"full name...\"\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <BsFillPersonFill />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"email\"\r\n                        type=\"email\"\r\n                        value={inputs.email}\r\n                        onChange={onChange}\r\n                        placeholder=\"email...\"\r\n                        required\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <MdSubject />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        name=\"subject\"\r\n                        type=\"text\"\r\n                        value={inputs.subject}\r\n                        onChange={onChange}\r\n                        placeholder=\"subject...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <InputGroup>\r\n                      <InputGroup.Prepend>\r\n                        <InputGroup.Text>\r\n                          <HiOutlineMail />\r\n                        </InputGroup.Text>\r\n                      </InputGroup.Prepend>\r\n                      <Form.Control\r\n                        as=\"textarea\"\r\n                        rows={3}\r\n                        name=\"message\"\r\n                        type=\"text\"\r\n                        value={inputs.message}\r\n                        onChange={onChange}\r\n                        placeholder=\"type your message...\"\r\n                      />\r\n                    </InputGroup>\r\n                  </Form.Group>\r\n                  <Button variant=\"primary\" type=\"submit\" className=\"login-btn\">\r\n                    Send Message\r\n                  </Button>\r\n                </Form>\r\n              </Col>\r\n              <Col className=\"Col-3\" />\r\n            </Row>\r\n          </Container>\r\n        </main>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default ContactScreen;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../BrowserCore/BottomNav\";\r\nimport { Container, ListGroup } from \"react-bootstrap\";\r\nconst MenuScreen = (props) => {\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Menu</title>\r\n        </Helmet>\r\n        <MobileBottomNav />\r\n        <Container fluid className=\"m-auto\">\r\n          <h1 className=\"category_title\">List Menu</h1>\r\n          <ListGroup>\r\n            <Link to=\"/fruit_veg\">\r\n              <ListGroup.Item action>Fruit & Veg</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/fresh_food\">\r\n              <ListGroup.Item action>Fresh Food</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/frozen_food\">\r\n              <ListGroup.Item action>Frozen Food</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/bakery\">\r\n              <ListGroup.Item action>Bakery</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/dried_goods\">\r\n              <ListGroup.Item action>Dried Goods</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/drinks_confectonary\">\r\n              <ListGroup.Item action>Drinks & Confectionary</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/cleaning\">\r\n              <ListGroup.Item action>Cleaning</ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/pets\">\r\n              <ListGroup.Item action>Pets</ListGroup.Item>\r\n            </Link>\r\n          </ListGroup>\r\n        </Container>\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Menu</title>\r\n        </Helmet>\r\n        <BrowserBottomNav />\r\n        <Container fluid className=\"m-auto\" style={{ maxWidth: \"30%\" }}>\r\n          <h1 className=\"category_title\">List Menu</h1>\r\n          <ListGroup>\r\n            <Link to=\"/fruit_veg\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Fruit & Veg\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/fresh_food\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Fresh Food\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/frozen_food\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Frozen Food\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/bakery\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Bakery\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/dried_goods\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Dried Goods\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/drinks_confectonary\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Drinks & Confectionary\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/cleaning\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Cleaning\r\n              </ListGroup.Item>\r\n            </Link>\r\n            <Link to=\"/pets\">\r\n              <ListGroup.Item action className=\"browser-menu\">\r\n                Pets\r\n              </ListGroup.Item>\r\n            </Link>\r\n          </ListGroup>\r\n        </Container>\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default MenuScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FruitVegItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deleteFruitVeg/\" + props.fruitveg._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.fruitveg.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.fruitveg.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FruitVegItem;\r\n","/* eslint-disable import/no-anonymous-default-export */\r\nexport default {\r\n\r\n    getFruitVeg : () => {\r\n      return fetch('/user/fruitvegList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postFruitVeg : fruitVegItem => {\r\n      return fetch('/user/fruitvegItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(fruitVegItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getFreshFood : () => {\r\n      return fetch('/user/freshfoodList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postFreshFood : freshFoodItem => {\r\n      return fetch('/user/freshfoodItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(freshFoodItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getFrozenFood : () => {\r\n      return fetch('/user/frozenfoodList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postFrozenFood : frozenFoodItem => {\r\n      return fetch('/user/frozenfoodItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(frozenFoodItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getBakery : () => {\r\n      return fetch('/user/bakeryList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postBakery : bakeryItem => {\r\n      return fetch('/user/bakeryItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(bakeryItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getDriedFood : () => {\r\n      return fetch('/user/driedfoodList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postDriedFood : driedFoodItem => {\r\n      return fetch('/user/driedfoodItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(driedFoodItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getDrinksConfectionary : () => {\r\n      return fetch('/user/drinksconfectionaryList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postDrinksConfectionary : drinksConfectionaryItem => {\r\n      return fetch('/user/drinksconfectionaryItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(drinksConfectionaryItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getHouseHold : () => {\r\n      return fetch('/user/toiletriescleaningList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postHouseHold : toiletriesCleaningItem => {\r\n      return fetch('/user/toiletriescleaningItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(toiletriesCleaningItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    },\r\n  \r\n    getPets : () => {\r\n      return fetch('/user/petList')\r\n        .then(response => {\r\n          if(response.status !== 401){\r\n            return response.json().then(data => data);\r\n          }\r\n          else\r\n            return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n        });\r\n    },\r\n  \r\n    postPets : petsItem => {\r\n      return fetch('/user/petItems', {\r\n        method : \"post\",\r\n        body : JSON.stringify(petsItem),\r\n        headers : {\r\n          'Content-Type' : 'application/json'\r\n        }\r\n      }).then(response => {\r\n        if(response.status !== 401){\r\n          return response.json().then(data => data);\r\n        }\r\n        else\r\n          return {message : {msgBody : \"Unauthorized\"}, msgError : true};\r\n      });\r\n    }\r\n  }","import React from 'react';\r\n\r\nconst getStyle = (props) => {\r\n    let baseClass = \"alert \";\r\n    if(props.message.msgError)\r\n        baseClass = baseClass + \"alert-danger\";\r\n    else\r\n        baseClass = baseClass + \"alert-primary\";\r\n    return baseClass + \" text-center\";\r\n}\r\nconst Message = props => {\r\n    return (\r\n        <div className={getStyle(props)} role=\"alert\">\r\n            {props.message.msgBody}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./FruitVegItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst FruitVegScreen = (props) => {\r\n  const [fruitveg, setfruitveg] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [fruitvegItems, setfruitvegItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getFruitVeg().then((data) => {\r\n      setfruitvegItems(data.fruitvegItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postFruitVeg(fruitveg).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getFruitVeg().then((getData) => {\r\n          setfruitvegItems(getData.fruitvegItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setfruitveg({\r\n      ...fruitveg,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const clearList = () => {\r\n\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setfruitveg({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Fruit & Veg</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fruit & Veg</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={fruitveg.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={fruitveg.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={fruitveg.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          <button\r\n            onClick={clearList}\r\n            className=\"btn btn-primary btn-block login-btn mt-2\"\r\n          >\r\n            Clear\r\n          </button>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody className>\r\n              {fruitvegItems &&\r\n                fruitvegItems.map((fruitveg) => {\r\n                  return <Item key={fruitveg._id} fruitveg={fruitveg} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Fruit & Veg</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fruit & Veg</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={fruitveg.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={fruitveg.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={fruitveg.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {fruitvegItems &&\r\n                fruitvegItems.map((fruitveg) => {\r\n                  return <Item key={fruitveg._id} fruitveg={fruitveg} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FruitVegScreen;\r\n","import React from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst FreshFoodScreen = (props) => {\r\n\r\n  const deleteItem = (id) => {\r\n    axios.get('/user/deleteFreshFood/'+ props.freshfood._id)\r\n    .then((res) => {\r\n      console.log('item deleted');\r\n      window.location.reload();\r\n    }).catch((error) => {\r\n      console.log(error)\r\n    })\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.freshfood.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.freshfood.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FreshFoodScreen;","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./FreshFoodItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst FreshFoodScreem = (props) => {\r\n  const [freshfood, setfreshfood] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [freshfoodItems, setfreshfoodItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getFreshFood().then((data) => {\r\n      setfreshfoodItems(data.freshfoodItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postFreshFood(freshfood).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getFreshFood().then((getData) => {\r\n          setfreshfoodItems(getData.freshfoodItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setfreshfood({\r\n      ...freshfood,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setfreshfood({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Fresh Food</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fresh Food</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={freshfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={freshfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={freshfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {freshfoodItems &&\r\n                freshfoodItems.map((freshfood) => {\r\n                  return <Item key={freshfood._id} freshfood={freshfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Fresh Food</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fresh Food</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={freshfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={freshfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={freshfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {freshfoodItems &&\r\n                freshfoodItems.map((freshfood) => {\r\n                  return <Item key={freshfood._id} freshfood={freshfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FreshFoodScreem;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst FrozenFoodItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deleteFrozenFood/\" + props.frozenfood._id)\r\n      .then((res) => {\r\n        console.log(\"Item Deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.frozenfood.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.frozenfood.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FrozenFoodItem;\r\n\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./FrozenFoodItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst FrozenFoodScreen = (props) => {\r\n  const [frozenfood, setfrozenfood] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [frozenfoodItems, setfrozenfoodItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getFrozenFood().then((data) => {\r\n      setfrozenfoodItems(data.frozenfoodItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postFrozenFood(frozenfood).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getFrozenFood().then((getData) => {\r\n          setfrozenfoodItems(getData.frozenfoodItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setfrozenfood({\r\n      ...frozenfood,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setfrozenfood({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Frozen Food</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Frozen Food</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={frozenfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={frozenfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={frozenfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {frozenfoodItems &&\r\n                frozenfoodItems.map((frozenfood) => {\r\n                  return <Item key={frozenfood._id} frozenfood={frozenfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Frozen Food</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Frozen Food</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={frozenfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={frozenfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={frozenfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {frozenfoodItems &&\r\n                frozenfoodItems.map((frozenfood) => {\r\n                  return <Item key={frozenfood._id} frozenfood={frozenfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default FrozenFoodScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst BakeryItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deleteBakery/\" + props.bakery._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.bakery.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.bakery.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BakeryItem;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./BakeryItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst BakeryScreen = (props) => {\r\n  const [bakery, setbakery] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [bakeryItems, setbakeryItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getBakery().then((data) => {\r\n      setbakeryItems(data.bakeryItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postBakery(bakery).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getBakery().then((getData) => {\r\n          setbakeryItems(getData.bakeryItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setbakery({\r\n      ...bakery,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setbakery({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Bakery</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Bakery</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={bakery.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={bakery.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={bakery.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {bakeryItems &&\r\n                bakeryItems.map((bakery) => {\r\n                  return <Item key={bakery._id} bakery={bakery} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Bakery</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Bakery</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={bakery.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={bakery.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={bakery.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {bakeryItems &&\r\n                bakeryItems.map((bakery) => {\r\n                  return <Item key={bakery._id} bakery={bakery} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BakeryScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DriedGoodsItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deleteDriedFoods/\" + props.driedfood._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.driedfood.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.driedfood.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DriedGoodsItem;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./DriedGoodsItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst DriedGoodsScreen = (props) => {\r\n  const [driedfood, setdriedfood] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [driedfoodItems, setdriedfoodItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getDriedFood().then((data) => {\r\n      setdriedfoodItems(data.driedfoodItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postDriedFood(driedfood).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getDriedFood().then((getData) => {\r\n          setdriedfoodItems(getData.driedfoodItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setdriedfood({\r\n      ...driedfood,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setdriedfood({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Dried Goods</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Dried Goods</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={driedfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={driedfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={driedfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {driedfoodItems &&\r\n                driedfoodItems.map((driedfood) => {\r\n                  return <Item key={driedfood._id} driedfood={driedfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Dried Goods</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Dried Goods</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={driedfood.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={driedfood.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={driedfood.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {driedfoodItems &&\r\n                driedfoodItems.map((driedfood) => {\r\n                  return <Item key={driedfood._id} driedfood={driedfood} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DriedGoodsScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst DrinksConfectionaryItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deleteDrinksConfectionary/\" + props.drinksconfectionary._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.drinksconfectionary.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.drinksconfectionary.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default DrinksConfectionaryItem;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./DrinksConfectionaryItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst DrinksConfectionaryScreen = (props) => {\r\n  const [drinksconfectionary, setdrinksconfectionary] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [drinksconfectionaryItems, setdrinksconfectionaryItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getDrinksConfectionary().then((data) => {\r\n      setdrinksconfectionaryItems(data.drinksconfectionaryItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postDrinksConfectionary(drinksconfectionary).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getDrinksConfectionary().then((getData) => {\r\n          setdrinksconfectionaryItems(getData.drinksconfectionaryItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setdrinksconfectionary({\r\n      ...drinksconfectionary,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setdrinksconfectionary({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Drinks & Confectionary</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">\r\n          Drinks & Confectionary\r\n        </h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={drinksconfectionary.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={drinksconfectionary.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={drinksconfectionary.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {drinksconfectionaryItems &&\r\n                drinksconfectionaryItems.map((drinksconfectionary) => {\r\n                  return (\r\n                    <Item\r\n                      key={drinksconfectionary._id}\r\n                      drinksconfectionary={drinksconfectionary}\r\n                    />\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Drinks & Confectionary</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">\r\n          Drinks & Confectionary\r\n        </h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={drinksconfectionary.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={drinksconfectionary.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={drinksconfectionary.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {drinksconfectionaryItems &&\r\n                drinksconfectionaryItems.map((drinksconfectionary) => {\r\n                  return (\r\n                    <Item\r\n                      key={drinksconfectionary._id}\r\n                      drinksconfectionary={drinksconfectionary}\r\n                    />\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default DrinksConfectionaryScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst CleaningItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deletetoiletriescleaning/\" + props.toiletriescleaning._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.toiletriescleaning.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.toiletriescleaning.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CleaningItem;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./CleaningItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst CleaningScreen = (props) => {\r\n  const [toiletriescleaning, settoiletriescleaning] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [toiletriescleaningItems, settoiletriescleaningItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getHouseHold().then((data) => {\r\n      settoiletriescleaningItems(data.toiletriescleaningItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postHouseHold(toiletriescleaning).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getHouseHold().then((getData) => {\r\n          settoiletriescleaningItems(getData.toiletriescleaningItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    settoiletriescleaning({\r\n      ...toiletriescleaning,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    settoiletriescleaning({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Cleaning</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Cleaning</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={toiletriescleaning.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={toiletriescleaning.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={toiletriescleaning.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {toiletriescleaningItems &&\r\n                toiletriescleaningItems.map((toiletriescleaning) => {\r\n                  return (\r\n                    <Item\r\n                      key={toiletriescleaning._id}\r\n                      toiletriescleaning={toiletriescleaning}\r\n                    />\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Cleaning</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Cleaning</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={toiletriescleaning.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={toiletriescleaning.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={toiletriescleaning.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {toiletriescleaningItems &&\r\n                toiletriescleaningItems.map((toiletriescleaning) => {\r\n                  return (\r\n                    <Item\r\n                      key={toiletriescleaning._id}\r\n                      toiletriescleaning={toiletriescleaning}\r\n                    />\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default CleaningScreen;\r\n","import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst PetsItem = (props) => {\r\n  const deleteItem = (id) => {\r\n    axios\r\n      .get(\"/user/deletePet/\" + props.pet._id)\r\n      .then((res) => {\r\n        console.log(\"item deleted\");\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <tr className=\"product_results\">\r\n        <td className=\"itemFont completed\">\r\n          <input className=\"form-check-input\" type=\"checkbox\" onClick={deleteItem} />\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.pet.name}\r\n        </td>\r\n        <td className=\"itemFont\" style={{ color: \"#EFC9AF\" }}>\r\n          {props.pet.quantity}\r\n        </td>\r\n        <button\r\n          className=\"btn btn-sm btn-primary login-btn mt-2\"\r\n          onClick={deleteItem}\r\n        >\r\n          Delete\r\n        </button>\r\n      </tr>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PetsItem;\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Item from \"./PetItem\";\r\nimport ListService from \"../../../Services/ListService\";\r\nimport { AuthContext } from \"../../../Context/AuthContext\";\r\nimport Message from \"../../Message\";\r\nimport { Container, Table } from \"react-bootstrap\";\r\nimport { isMobile } from \"react-device-detect\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport MobileBottomNav from \"../../MobileCore/BottomNav\";\r\nimport BrowserBottomNav from \"../../BrowserCore/BottomNav\";\r\n\r\nconst PetsScreen = (props) => {\r\n  const [pet, setpet] = useState({\r\n    name: \"\",\r\n    quantity: Number,\r\n    user: \"\",\r\n  });\r\n  const [petItems, setpetItems] = useState([]);\r\n  const [message, setMessage] = useState(null);\r\n  const authcontext = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    ListService.getPets().then((data) => {\r\n      setpetItems(data.petItems);\r\n    });\r\n  }, []);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    ListService.postPets(pet).then((data) => {\r\n      const { message } = data;\r\n      resetForm();\r\n      if (!message.msgError) {\r\n        ListService.getPets().then((getData) => {\r\n          setpetItems(getData.petItems);\r\n        });\r\n      }\r\n      //JWT token expired if this else if runs\r\n      else if (message.msgBody === \"Unauthorized\") {\r\n        setMessage(message);\r\n        authcontext.setUser({\r\n          name: \"\",\r\n          username: \" \",\r\n          email: \"\",\r\n        });\r\n        authcontext.setIsAuthenticated(false);\r\n      } else {\r\n        setMessage(message);\r\n      }\r\n    });\r\n  };\r\n\r\n  const onChange = (e) => {\r\n    setpet({\r\n      ...pet,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setpet({\r\n      name: \"\",\r\n      quantity: \"\",\r\n      user: \"\",\r\n    });\r\n  };\r\n\r\n  if (isMobile) {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Pets</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fruit & Veg</h3>\r\n        <Container fluid>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={pet.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={pet.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={pet.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container fluid className=\"table_container\">\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {petItems &&\r\n                petItems.map((pet) => {\r\n                  return <Item key={pet._id} pet={pet} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <MobileBottomNav />\r\n      </>\r\n    );\r\n  } else {\r\n    return (\r\n      <>\r\n        <Helmet>\r\n          <meta charSet=\"utf-8\" />\r\n          <title>Pets</title>\r\n        </Helmet>\r\n        <h3 className=\"text-center mt-5 category_title\">Fruit & Veg</h3>\r\n        <Container fluid style={{ maxWidth: \"30%\" }}>\r\n          <form onSubmit={onSubmit}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={pet.name}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter an item\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"number\"\r\n              name=\"quantity\"\r\n              value={pet.quantity}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Please enter the amount you want...\"\r\n              required\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"user\"\r\n              value={pet.user}\r\n              onChange={onChange}\r\n              className=\"form-control product_input\"\r\n              placeholder=\"Who has added this product...\"\r\n              required\r\n            />\r\n            <button\r\n              className=\"btn btn-primary btn-block login-btn\"\r\n              type=\"submit\"\r\n            >\r\n              Add\r\n            </button>\r\n          </form>\r\n          {message ? <Message message={message} /> : null}\r\n        </Container>\r\n        <Container\r\n          fluid\r\n          className=\"table_container\"\r\n          style={{ maxWidth: \"30%\" }}\r\n        >\r\n          <Table responsive=\"md\" className=\"table-borderless\">\r\n            <thead>\r\n              <tr>\r\n                <th style={{ color: \"#EFC9AF\" }}>Completed</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Product</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Quantity</th>\r\n                <th style={{ color: \"#EFC9AF\" }}>Remove</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {petItems &&\r\n                petItems.map((pet) => {\r\n                  return <Item key={pet._id} pet={pet} />;\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </Container>\r\n        <BrowserBottomNav />\r\n      </>\r\n    );\r\n  }\r\n};\r\n\r\nexport default PetsScreen;\r\n","import React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport './styles/App.scss';\r\nimport { BrowserView, MobileView } from \"react-device-detect\";\r\nimport PrivateRoute from './hocs/PrivateRoute';\r\nimport UnprivateRoute from './hocs/UnprivateRoute';\r\n\r\nimport MobileHeader from './Components/MobileCore/Header';\r\nimport BrowserHeader from './Components/BrowserCore/Header';\r\nimport Home from './Components/Screens/HomeScreen';\r\nimport Login from './Components/Screens/LoginScreen';\r\nimport Register from './Components/Screens/RegisterScreen';\r\nimport Contact from './Components/Screens/ContactScreen';\r\nimport UserContact from './Components/Screens/UserContractScreen';\r\nimport Menu from './Components/Screens/MenuScreen';\r\nimport FruitVeg from './Components/Screens/ListScreens/FruitVeg';\r\nimport FreshFood from './Components/Screens/ListScreens/FreshFood';\r\nimport FrozenFood from './Components/Screens/ListScreens/FrozenFood';\r\nimport Bakery from './Components/Screens/ListScreens/Bakery';\r\nimport DriedGoods from './Components/Screens/ListScreens/DriedGoods';\r\nimport DrinksConfectionary from './Components/Screens/ListScreens/DrinksConfectionary';\r\nimport Cleaning from './Components/Screens/ListScreens/Cleaning';\r\nimport Pets from './Components/Screens/ListScreens/Pets';\r\n\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <BrowserView>\r\n          <BrowserHeader />\r\n        </BrowserView>\r\n        <MobileView>\r\n          <MobileHeader />\r\n        </MobileView>\r\n        <UnprivateRoute exact path=\"/\" component={Home} />\r\n        <UnprivateRoute path=\"/login\" component={Login} />\r\n        <UnprivateRoute path=\"/register\" component={Register} />\r\n        <UnprivateRoute path=\"/contact\" component={Contact} />\r\n        <PrivateRoute path=\"/user_contact\" accountRoles={[\"Personal\", \"Family\"]} component={UserContact} />\r\n        <PrivateRoute path=\"/menu\" accountRoles={[\"Personal\", \"Family\"]} component={Menu} />\r\n\r\n        {/* List Screens */}\r\n        <PrivateRoute path=\"/fruit_veg\" accountRoles={[\"Personal\", \"Family\"]} component={FruitVeg}/>\r\n        <PrivateRoute path=\"/fresh_food\" accountRoles={[\"Personal\", \"Family\"]} component={FreshFood}/>\r\n        <PrivateRoute path=\"/frozen_food\" accountRoles={[\"Personal\", \"Family\"]} component={FrozenFood}/>\r\n        <PrivateRoute path=\"/bakery\" accountRoles={[\"Personal\", \"Family\"]} component={Bakery}/>\r\n        <PrivateRoute path=\"/dried_goods\" accountRoles={[\"Personal\", \"Family\"]} component={DriedGoods}/>\r\n        <PrivateRoute path=\"/drinks_confectonary\" accountRoles={[\"Personal\", \"Family\"]} component={DrinksConfectionary}/>\r\n        <PrivateRoute path=\"/cleaning\" accountRoles={[\"Personal\", \"Family\"]} component={Cleaning}/>\r\n        <PrivateRoute path=\"/pets\" accountRoles={[\"Personal\", \"Family\"]} component={Pets}/>\r\n\r\n      </Router>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerReistration from './serviceWorkerRegistration';\nimport AuthProvider from \"./Context/AuthContext\";\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <AuthProvider>\n    <App />\n    </AuthProvider>,\n  document.getElementById('root')\n);\n\nserviceWorkerReistration.register();\n\nreportWebVitals();\n"],"sourceRoot":""}